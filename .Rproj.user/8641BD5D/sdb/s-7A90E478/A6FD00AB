{
    "contents" : "---\ntitle: \"Antarctic Whale Project: Patch Dynamics\"\nauthor: \"Ben Weinstein\"\ndate: \"`r Sys.time()`\"\noutput: \n  html_document:\n    keep_md: true\n    number_sections: true\n    toc: true\n    theme: spacelab\n---\n\n#Aim\n\n\n```{r,warning=FALSE,message=FALSE,echo=FALSE}\nlibrary(knitr)\nopts_chunk$set(echo=F,warning=F,message=F,fig.width = 6,fig.height = 4,fig.align='center')\nlibrary(boot)\nlibrary(raster)\nlibrary(reshape2)\nlibrary(ggplot2)\nlibrary(survival)\nlibrary(MASS)\nlibrary(ggmap)\nlibrary(dplyr)\n```\n\n```{r,eval=T}\n#Load in data\nfeedr<-read.csv(\"OutData/Runs.csv\")\n```\n\n\n#Proportional Hazards\n\nSurvival analysis typically examines the relationship between time to death as a function of covariates. From this we can get the instantaneous rate of death at time t f(t), which is the cumulative distribution of the likelihood of death.\n\nLet T represent survival time.\n\n$$ P(t) = Pr(T<t)$$ \nwith a pdf\n$$p(t) = \\frac{dP(t)}{dt}$$\n\nThe instantaneous risk of death at time t (h(t)), conditional on survival to that time:\n\n$$ h(t) = \\lim{\\Delta_t\\to 0} \\frac{Pr[(t<T<t + \\Delta_t)]|T>t}{\\Delta t}$$\n\nwith covariates:\n$$log (h_i(t)) = \\alpha + \\beta_i *x$$\n\nThe cox model has no intercept, making it semi-parametric\n$$ log(h_i(t)) = h_0(t) + \\beta_1 * x$$\n\n```{r}\n#run functions\nrunf<-function(x){\n  #arrange by step\n  #calculate run length\n  state_change<-rle(as.numeric(x))\n  runl<-data.frame(runs=state_change$lengths,Behavior=state_change$values)\n  runl$Behavior<-as.factor(runl$Behavior)\n  levels(runl$Behavior)<-c(\"Traveling\",\"Feeding\")\n  \n  return(runl)\n}\n\nendtrack<-function(x){\n  x[nrow(x),\"status\"]<-0\n  return(x)\n}\n```\n\n#Random foraging.\n\nIf behavioral states were distributed at random, what would the survival and hazard functions look like?\n\n\n```{r}\n##Create random runs\n\n#total number of hours\nth<-sum(feedr$hours)\n#\nrandom_draw<-rbinom(th,1,0.5)\nrandom_run<-runf(random_draw)\nrandom_run$status<-1\n\n#last track is censored\nrandom_run<-endtrack(random_run)\n```\n\n\n```{r}\n##Fit Cox Regression\n\n#survival analysis for just feeding\nrf<-coxph(Surv(time=random_run$runs,event=random_run$status,type=\"right\")~1)\nrfit<-survfit(rf)\n```\n\n\n```{r}\n##Survival Curve\n\n#plot\nsplot1<-data.frame(x=rfit$time,surv=rfit$surv,lower=rfit$lower,upper=rfit$upper)\n\nggplot(splot1,aes(x=x,y=surv,ymin=lower,ymax=upper)) + geom_step() + geom_ribbon(alpha=0.3) + theme_bw() + labs(x=\"Time\",y=\"Proportion still feeding\") + ggtitle(\"Random Foraging\")\n```\n\n## Hazard function\n\n$$\\text{Cumulative Hazard} = -log(Survival)$$\n\n```{r}\nhplot1<-data.frame(x=rfit$time,chaz=-log(rfit$surv),lower=-log(rfit$lower),upper=-log(rfit$upper))\n\nggplot(hplot1,aes(x=x,y=chaz,ymin=lower,ymax=upper)) + geom_step() + geom_ribbon(alpha=0.3) + theme_bw() + labs(x=\"Time\",y=\"Cumulative Hazard\")\n```\n\n# Observed Data\n\n\n```{r}\n#survival analysis for just feeding\ntf<-coxph(Surv(time=feedr$hours,event=feedr$status,type=\"right\")~1)\nfit<-survfit(tf)\n```\n\n## Survival\n\n```{r}\n#plot\nsplot2<-data.frame(x=fit$time,surv=fit$surv,lower=fit$lower,upper=fit$upper)\nggplot(splot2,aes(x=x,y=surv,ymin=lower,ymax=upper)) + geom_step() + geom_ribbon(alpha=0.3) + theme_bw() + labs(x=\"Time\",y=\"Proportion still feeding\")\n```\n\n## Cumulative Hazard\n\n```{r}\n#plot\nhplot2<-data.frame(x=fit$time,chaz=-log(fit$surv),lower=-log(fit$lower),upper=-log(fit$upper))\nggplot(hplot2,aes(x=x,y=chaz,ymin=lower,ymax=upper)) + geom_step() + geom_ribbon(alpha=0.3) + theme_bw() + labs(x=\"Time\",y=\"Cumulative Hazard\")\n```\n\nZoom and compare to random foraging\n\n```{r}\n#plot\nggplot(hplot2,aes(x=x,y=chaz,ymin=lower,ymax=upper)) + geom_step() + geom_ribbon(alpha=0.3) + theme_bw() + labs(x=\"Time\",y=\"Cumulative Hazard\") + geom_abline(linetype=\"dashed\",slope=1) + xlim(0,100)\n``` \n\n#Comparison\n\n## Survival\n\n```{r}\nsurvival<-list(splot1,splot2)\nnames(survival)<-c(\"Random\",\"Observed\")\nsurvival<-melt(survival,id.vars=colnames(splot1))\nggplot(survival,aes(x=x,y=surv,ymin=lower,ymax=upper,col=L1,fill=L1)) + geom_step() + geom_ribbon(alpha=0.3) + theme_bw() + labs(x=\"Time\",y=\"Cumulative Hazard\") + labs(col=\"Data\",fill=\"Data\")\n```\n\n## Hazards\n\n```{r}\nhazards<-list(hplot1,hplot2)\nnames(hazards)<-c(\"Random\",\"Observed\")\nhazards<-melt(hazards,id.vars=colnames(hplot1))\nggplot(hazards,aes(x=x,y=chaz,ymin=lower,ymax=upper,col=L1,fill=L1)) + geom_step() + geom_ribbon(alpha=0.3) + theme_bw() + labs(x=\"Time\",y=\"Proportion stil feeding\") + labs(col=\"Data\",fill=\"Data\")\n```\n\n# Zoom in\n\n```{r}\nggplot(survival,aes(x=x,y=surv,ymin=lower,ymax=upper,col=L1,fill=L1)) + geom_step() + geom_ribbon(alpha=0.3) + theme_bw() + labs(x=\"Time\",y=\"Cumulative Hazard\") + labs(col=\"Data\",fill=\"Data\") + xlim(0,25)\n```\n\n\n# The Weibull Distribution\n\nThe Weibull distribution with shape parameter a and scale parameter b has density given by\n\n$$f(x) = \\frac{a}{b} * \\frac{x}{b}^(a-1) \\exp{-\\frac{x}{b}^a}$$\n\nThe cumulative hazard function at time t is $$H(t) = \\frac{t}{b}^a$$\n\nThe Weibull collapses to the expontential distribution with parameters (shape=1,scale=1)\n\n```{r}\nexpo<-rexp(1000)\nwebo<-rweibull(1000,shape=1,scale=1)\nvals<-melt(list(exponential=expo,weibull=webo))\nggplot(vals) + geom_density(aes(x=value,fill=L1),alpha=0.3) + labs(fill=\"Distribution\")\n```\n\nThe shape parameter \n\n```{r}\ndat<-lapply(seq(0,2,0.01),function(x){\n  a<-data.frame(x=seq(1,10,.1),y=dweibull(seq(1,10,.1),shape=x,scale=1),shape=x,scale=1)  \n})\ndat<-rbind_all(dat)\n\nggplot(dat,aes(x=x,y=-log(y),col=shape,group=shape)) + geom_line() + geom_line(aes(x=x,y=-log(dexp(x))),col=\"black\",size=1,linetype='dashed') + scale_color_continuous(low='blue',high='red') + ylab(\"Cumualtive Hazard\") + xlab(\"Time\")\n```\n\nThe scale parameter\n\n```{r}\ndat<-lapply(seq(1,2,0.01),function(x){\n  a<-data.frame(x=seq(1,10,.1),y=dweibull(seq(1,10,.1),shape=1,scale=x),shape=1,scale=x)  \n})\ndat<-rbind_all(dat)\n\nggplot(dat,aes(x=x,y=-log(y),col=scale,group=scale)) + geom_line() + geom_line(aes(x=x,y=-log(dexp(x))),col=\"black\",size=1,linetype='dashed') + scale_color_continuous(low='blue',high='red') + ylab(\"Cumualtive Hazard\") + xlab(\"Time\")\n```\n",
    "created" : 1467297032354.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2663322076",
    "id" : "A6FD00AB",
    "lastKnownWriteTime" : 1467302834,
    "path" : "~/Whales/Patch.Rmd",
    "project_path" : "Patch.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_markdown"
}