mxy$Year<-years(mxy$timestamp)
#Only austral sping and summer
mxy<-mxy[mxy$Month %in% month.name[1:7],]
#remove empty timestamps
mxy<-mxy[!is.na(mxy$timestamp),]
sum(!duplicated(data.frame(mxy$timestamp,mxy$Animal)))
sum(duplicated(data.frame(mxy$timestamp,mxy$Animal)))
mxy<-mxy[!duplicated(data.frame(mxy$timestamp,mxy$Animal)),]
sum(!mxy$ETOPO1.Elevation>0)
sum(mxy$ETOPO1.Elevation>0)
mxy<-mxy[!mxy$ETOPO1.Elevation>0,]
d<-SpatialPointsDataFrame(cbind(mxy$x,mxy$y),data=mxy,proj4string=CRS("+proj=longlat +datum=WGS84"))
dat<-trip(d,c("timestamp","Animal"))
plot(dat)
?speedfilter
sdat<-speedfilter(dat,max.speed = 37.04)
dim(sdat)
sdat
sum(sdat)
sum(!sdat)
dat$Filter<-sdat
dat %>% group_by(Animal) %>% summarize(sum(Filter))
data.frame(dat) %>% group_by(Animal) %>% summarize(sum(Filter))
data.frame(dat) %>% group_by(Animal) %>% summarize(n=sum(Filter)) %>% arrange(desc(n))
data.frame(dat) %>% group_by(Animal) %>% summarize(n=sum(!Filter)) %>% arrange(desc(n))
a<-data.frame(dat) %>% group_by(Animal) %>% summarize(n=sum(!Filter)) %>% arrange(desc(n))
plot(a)
qplot(a)
a
qplot(a$Animal,a$n)
qplot(factor(a$Animal),a$n)
a<-data.frame(dat) %>% group_by(Month) %>% summarize(n=sum(!Filter)) %>% arrange(desc(n))
qplot(factor(a$Animal),a$n)
qplot(factor(a$Month),a$n)
qplot(factor(a$Year),a$n)
a<-data.frame(dat) %>% group_by(Yera) %>% summarize(n=sum(!Filter)) %>% arrange(desc(n))
a<-data.frame(dat) %>% group_by(Year) %>% summarize(n=sum(!Filter)) %>% arrange(desc(n))
qplot(factor(a$Year),a$n)
a<-data.frame(dat) %>% filter(Filter==T)
dim(a)
write.csv("InputData/FilteredData.csv")
write.csv(a,"InputData/FilteredData.csv")
sum(!dat$Filter)
dim(a)
mdat<-read.csv("InputData/FilterData.csv")
mdat<-read.csv("InputData/FilteredData.csv")
#standardize column names to match the simulation
#Create an animal tag.
mxy <- as(mdat, "data.frame")
mxy$Animal<-mxy$individual.local.identifier
mxy$x<-mxy$location.long
mxy$y<-mxy$location.lat
#remove minke whales
minke<-c("131117","131118","131120","154184")
mxy<-mxy[!mxy$individual.local.identifier %in% minke,]
dim(mxy)
mxy<-mxy[!is.na(mxy$x),]
dim(mxy)
mxy<-mxy[!is.na(mxy$x),]
#crop by extent
d<-SpatialPointsDataFrame(cbind(mxy$x,mxy$y),data=mxy,proj4string=CRS("+proj=longlat +datum=WGS84"))
d<-crop(d,y=extent(c(-75,-50,-70,-57.5)))
#give it a geospatial layer
mxy<-as.data.frame(d)
#set datestamp
mxy$timestamp<-as.POSIXct(mxy$timestamp,format="%Y-%m-%d %H:%M:%S.000")
#month and year columns
mxy$Month<-months(mxy$timestamp)
mxy$Year<-years(mxy$timestamp)
#Only austral sping and summer
mxy<-mxy[mxy$Month %in% month.name[1:7],]
#remove empty timestamps
mxy<-mxy[!is.na(mxy$timestamp),]
#remove duplicates
mxy<-mxy[!duplicated(data.frame(mxy$timestamp,mxy$Animal)),]
mxy<-mxy[!mxy$ETOPO1.Elevation>0,]
oxy<-mxy
#remake spatial object
d<-SpatialPointsDataFrame(cbind(mxy$x,mxy$y),data=mxy,proj4string=CRS("+proj=longlat +datum=WGS84"))
#Plot
pp<-c(mean(mxy$x),mean(mxy$y))
m <- get_map(location=pp,source="google",zoom=4,scale=2,maptype="satellite",color = "bw")
ggmap(m)+geom_path(data=mxy, aes(x=x, y=y,col=as.factor(Animal)),size=.5) + scale_color_discrete(guide="none") + theme_inset()
d<-SpatialPointsDataFrame(cbind(mxy$x,mxy$y),data=mxy,proj4string=CRS("+proj=longlat +datum=WGS84"))
mxy$x
mxy$X
mdat<-read.csv("InputData/FilteredData.csv")
head(mdat)
mdat<-read.csv("InputData/FilteredData.csv",row.names=1)
#standardize column names to match the simulation
#Create an animal tag.
mxy$Animal<-mxy$individual.local.identifier
mxy <- as(mdat, "data.frame")
mxy$x<-mxy$location.long
mxy$y<-mxy$location.lat
#make sure to remove minke whales, should be already gone, but justfor safety
minke<-c("131117","131118","131120","154184")
mxy<-mxy[!mxy$individual.local.identifier %in% minke,]
#grab set of animals
#mxy<-mxy[mxy$Animal %in% c("112699","121207","131151"),]
#empty coordinates
mxy<-mxy[!is.na(mxy$x),]
#crop by extent
d<-SpatialPointsDataFrame(cbind(mxy$x,mxy$y),data=mxy,proj4string=CRS("+proj=longlat +datum=WGS84"))
d<-crop(d,y=extent(c(-75,-50,-70,-57.5)))
#give it a geospatial layer
mxy<-as.data.frame(d)
#set datestamp
mxy$timestamp<-as.POSIXct(mxy$timestamp,format="%Y-%m-%d %H:%M:%S.000")
#month and year columns
mxy$Month<-months(mxy$timestamp)
mxy$Year<-years(mxy$timestamp)
#Only austral sping and summer
mxy<-mxy[mxy$Month %in% month.name[1:7],]
#remove empty timestamps
mxy<-mxy[!is.na(mxy$timestamp),]
#remove duplicates
mxy<-mxy[!duplicated(data.frame(mxy$timestamp,mxy$Animal)),]
mxy<-mxy[!mxy$ETOPO1.Elevation>0,]
dim(mxy)
mdat<-read.csv("InputData/FilteredData.csv",row.names=1)
#standardize column names to match the simulation
#Create an animal tag.
mxy <- as(mdat, "data.frame")
mxy$Animal<-mxy$individual.local.identifier
mxy$x<-mxy$location.long
mxy$y<-mxy$location.lat
#make sure to remove minke whales, should be already gone, but justfor safety
minke<-c("131117","131118","131120","154184")
mxy<-mxy[!mxy$individual.local.identifier %in% minke,]
dim(mxy)
minke<-c("131117","131118","131120","154184")
mxy<-mxy[!mxy$individual.local.identifier %in% minke,]
#grab set of animals
#mxy<-mxy[mxy$Animal %in% c("112699","121207","131151"),]
#empty coordinates
mxy<-mxy[!is.na(mxy$x),]
#crop by extent
d<-SpatialPointsDataFrame(cbind(mxy$x,mxy$y),data=mxy,proj4string=CRS("+proj=longlat +datum=WGS84"))
plot(d)
d<-crop(d,y=extent(c(-75,-50,-70,-57.5)))
mxy<-as.data.frame(d)
dim(mxy)
mxy$timestamp<-as.POSIXct(mxy$timestamp,format="%Y-%m-%d %H:%M:%S.000")
mxy$Month<-months(mxy$timestamp)
mxy$Year<-years(mxy$timestamp)
dim(mxy)
[mxy$Month
mxy$Month
head(mxy)
head(mdat)
#Create an animal tag.
mxy <- as(mdat, "data.frame")
mxy$Animal<-mxy$individual.local.identifier
mxy$x<-mxy$location.long
mxy$y<-mxy$location.lat
#make sure to remove minke whales, should be already gone, but justfor safety
minke<-c("131117","131118","131120","154184")
mxy<-mxy[!mxy$individual.local.identifier %in% minke,]
#grab set of animals
#mxy<-mxy[mxy$Animal %in% c("112699","121207","131151"),]
#empty coordinates
mxy<-mxy[!is.na(mxy$x),]
#crop by extent
d<-SpatialPointsDataFrame(cbind(mxy$x,mxy$y),data=mxy,proj4string=CRS("+proj=longlat +datum=WGS84"))
d<-crop(d,y=extent(c(-75,-50,-70,-57.5)))
mxy<-as.data.frame(d)
#set datestamp
mxy$timestamp<-as.POSIXct(mxy$timestamp)
mxy$Month<-months(mxy$timestamp)
mxy$Month
#read data
mdat<-read.csv("InputData/FilteredData.csv",row.names=1)
#standardize column names to match the simulation
#Create an animal tag.
mxy <- as(mdat, "data.frame")
mxy$Animal<-mxy$individual.local.identifier
mxy$x<-mxy$location.long
mxy$y<-mxy$location.lat
#make sure to remove minke whales, should be already gone, but justfor safety
minke<-c("131117","131118","131120","154184")
mxy<-mxy[!mxy$individual.local.identifier %in% minke,]
#grab set of animals
#mxy<-mxy[mxy$Animal %in% c("112699","121207","131151"),]
#empty coordinates
mxy<-mxy[!is.na(mxy$x),]
#crop by extent
d<-SpatialPointsDataFrame(cbind(mxy$x,mxy$y),data=mxy,proj4string=CRS("+proj=longlat +datum=WGS84"))
d<-crop(d,y=extent(c(-75,-50,-70,-57.5)))
mxy<-as.data.frame(d)
#set datestamp
mxy$timestamp<-as.POSIXct(mxy$timestamp)
#month and year columns
mxy$Month<-months(mxy$timestamp)
mxy$Year<-years(mxy$timestamp)
#Only austral sping and summer
mxy<-mxy[mxy$Month %in% month.name[1:7],]
#remove empty timestamps
mxy<-mxy[!is.na(mxy$timestamp),]
#remove duplicates
mxy<-mxy[!duplicated(data.frame(mxy$timestamp,mxy$Animal)),]
mxy<-mxy[!mxy$ETOPO1.Elevation>0,]
#hold copy of orig
oxy<-mxy
#remake spatial object
d<-SpatialPointsDataFrame(cbind(mxy$x,mxy$y),data=mxy,proj4string=CRS("+proj=longlat +datum=WGS84"))
#Plot
pp<-c(mean(mxy$x),mean(mxy$y))
m <- get_map(location=pp,source="google",zoom=4,scale=2,maptype="satellite",color = "bw")
ggmap(m)+geom_path(data=mxy, aes(x=x, y=y,col=as.factor(Animal)),size=.5) + scale_color_discrete(guide="none") + theme_inset()
mxy$Month<-factor(mxy$Month,levels=month.name)
m <- get_map(location=pp,source="google",zoom=5,scale=2,maptype="satellite",color = "bw")
ggmap(m)+geom_path(data=mxy, aes(x=x, y=y,col=as.factor(Animal)),size=.5)  + facet_wrap(~Month,nrow = 2) + scale_color_discrete(guide="none") + labs(x="",y="") + theme(axis.text.x=element_blank(),axis.text.y=element_blank(),axis.ticks.y=element_blank(),axis.ticks.x=element_blank())
ggsave("Figures/MonthTracks.jpeg",height=6, width=9)
moved<-move(x=mxy$x,y=mxy$y,time=mxy$timestamp,proj=CRS("+proj=longlat +ellps=WGS84"),animal=mxy$Animal,data=as.data.frame(mxy),sensor=mxy$Animal,removeDuplicatedTimestamps=T)
dstat<-melt(move::distanceSummary(moved))
dstat<-droplevels(dstat[dstat$variable %in% c("TravDist","AverDist","FarthDist"),])
levels(dstat$variable)<-c("Total Distance","Average Distance Between Points","Farthest Distance Between Points")
ggplot(dstat,aes(value/1000)) + geom_histogram() + facet_wrap(~variable,scales="free") + labs(x="Kilometers")
head(dstat)
tstat<-move::timeSummary(moved)
tstat<-melt(tstat,measure.vars=colnames(tstat[[1]]))
tstat<-droplevels(tstat[tstat$variable %in% c("Duration","AverDur"),])
levels(tstat$variable)<-c("Total Time (Hours)","Average Time Between Points (Hours)")
tstat
tstat %>% group_by(variable) %>% summarize(mean(value))
1.085*60
1105/60
tstat %>% group_by(variable) %>% summarize(max(value))
3494/60
mxy %>% group_by(Animal) %>% n()
mxy %>% group_by(Animal) %>% summarize(n())
mxy %>% group_by(Animal) %>% summarize(n=n()) %>% sum(.$n)
mxy %>% group_by(Animal) %>% summarize(n=n()) %>% mean(.$n)
mxy %>% group_by(Animal) %>% summarize(n=n()) %>% mean(.$n,na.rm=T)
a<-mxy %>% group_by(Animal) %>% summarize(n=n())
a
mean(a$n)
1187/60
sd(a$n)
min(a$n)
max(a$n)
tsta
tstat
tstat %>% group_by(variable) %>% summarize(n=mean(value))
1105.58/24
tstat %>% group_by(variable) %>% summarize(n=min(value))
42/24
tstat %>% group_by(variable) %>% summarize(n=max(value))
3493.352222/24
##Time is the beginning of the first point.
step_length=6
sxy<-split(mxy,mxy$Animal)
#time diff function
timed<-function(d,step_length){
d$j[1]<-0
for (x in 2:nrow(d)){
d$j[x]<-as.numeric(difftime(as.POSIXct(d$timestamp[x]),as.POSIXct(d$timestamp[x-1]),units="mins"))/(step_length*60)
}
#Split out track endings
ends<-c(1,which(d$j>1),nrow(d))
for(w in 2:length(ends)){
d[ends[w-1]:ends[w],"Track"]<-w-1
}
#remove tracks that are shorter than three days
track_time<-d %>% group_by(Track) %>% summarize(mt=difftime(max(as.POSIXct(timestamp)),min(as.POSIXct(timestamp)),units="hours")) %>% filter(mt>=24) %>% .$Track
d<-d[d$Track %in% track_time,]
#renumber the tracks
d$Track<-as.numeric(as.factor(d$Track))
return(d)
}
sxy<-lapply(sxy,timed,step_length=6)
#Format matrices for jags
mxy<-rbind_all(sxy)
######recode whales
#mxy$Animal<-as.numeric(as.factor(mxy$Animal))
sxy<-split(mxy,list(mxy$Animal,mxy$Track),drop=TRUE)
sxy<-lapply(sxy,function(x){
#How many observations in each step length segment
x$step<-as.numeric(cut(as.POSIXct(x$timestamp),"6 hours"))
return(x)
})
mxy<-rbind_all(sxy)
#refactor animal
mxy$Animal<-as.numeric(as.factor(mxy$Animal))
#total number of steps per track/animal
steps_all<-mxy %>% group_by(Animal,Track) %>% summarize(n=length(unique(step)))
# give each step a label
mxy<-mxy %>% group_by(Animal,Track,step) %>% mutate(jStep=1:n())
#Cast time array
j<-acast(mxy,Animal~Track~step~jStep,value.var="j")
#how many observations per individual in each step
mxy$step<-factor(mxy$step,levels=1:max(steps_all$n))
idx<-melt(table(mxy$Animal,mxy$Track,mxy$step))
colnames(idx)<-c("Animal","Track","step","jStep")
idx<-acast(data=idx,Animal~Track~step)
#month array
mxy$MonthF<-as.numeric(factor(mxy$Month,levels=month.name))
MonthA<-acast(mxy,Animal~Track~step,value.var="MonthF",fun.aggregate = min)
MonthA[!is.finite(MonthA)]<-NA
#Individuals
ind=length(unique(mxy$Animal))
#tracks per indivudal
tracks<-mxy %>% group_by(Animal) %>% summarize(tracks=length(unique(Track))) %>% .$tracks
#steps per track
steps<-acast(steps_all,Animal~Track,value.var="n")
#obs array
obs<-melt(mxy,measure.vars=c("x","y"))
obs<-acast(obs,Animal~Track~step~jStep~variable)
#Plot
mxy<-mxy %>% arrange(Animal,Track,step,jStep)
pp<-c(mean(mxy$x),mean(mxy$y))
m <- get_map(location=pp,source="google",zoom=5,scale=2,maptype="satellite",color = "bw")
ggmap(m)+geom_path(data=mxy, aes(x=x, y=y,col=as.factor(Animal),group=paste(Animal,Track)),size=.5) + scale_color_discrete(guide="none") + theme_inset()
dim(mxy)
dim(mdat)
dim(mdat) - dim(mxy)
length(unique(mdat$Animal))
length(unique(mdat$mxy))
length(unique(mxy$Animal))
table(mdat$Month)
table(d$Animal,d$Year)
dim(mxy)
lsos()
mdf<-as.data.frame(mksp)
head(mdf)
ccamlr
ccamlr$Areakm2
min(ccamlr$Areakm2)
which.min(ccamlr$Areakm2)
ccamlr[2,]
which.min(ccamlr$Areakm2)
max(ccamlr$Areakm2)
ccamlr$SSMUname
head(mdf)
mdf %>% group_by(Unit) %>% summarize(s=sum(unit))
mdf %>% group_by(Unit) %>% summarize(s=sum(value))
mdf %>% group_by(Unit) %>% summarize(s=sum(value),na.rm=T)
mdf %>% group_by(Unit) %>% summarize(s=sum(value,na.rm=T))
mdf %>% group_by(Unit) %>% summarize(s=sum(value,na.rm=T)) %>% arrange(s)
camdf<-mdf %>% group_by(Unit) %>% summarize(s=sum(value,na.rm=T)) %>% arrange(s)
write.csv(camdf,"Figures/CCAMLR_days.csv")
head(mdf)
camdf<-mdf %>% group_by(Unit,varaible) %>% summarize(s=sum(value,na.rm=T)) %>% arrange(s)
camdf<-mdf %>% group_by(Unit,variable) %>% summarize(s=sum(value,na.rm=T)) %>% arrange(s)
camdf
camdf<-mdf %>% group_by(Unit,variable) %>% summarize(s=sum(value,na.rm=T)) %>% arrange(s) %>% spread(variable)
library(tidyr)
camdf<-mdf %>% group_by(Unit,variable) %>% summarize(s=sum(value,na.rm=T)) %>% arrange(s) %>% spread(variable)
camdf<-mdf %>% group_by(Unit,variable) %>% summarize(s=sum(value,na.rm=T)) %>% arrange(s) %>% spread("variable")
camdf<-mdf %>% group_by(Unit,variable) %>% summarize(s=sum(value,na.rm=T)) %>% arrange(s) %>% spread(.,"variable")
camdf<-mdf %>% group_by(Unit,variable) %>% summarize(s=sum(value,na.rm=T)) %>% arrange(s) %>% spread(data=.,"variable")
head(mdf)
camdf<-mdf %>% group_by(Unit,variable) %>% summarize(s=sum(value,na.rm=T)) %>% arrange(s) %>% dcast(.,~variable)
camdf<-mdf %>% group_by(Unit,variable) %>% summarize(s=sum(value,na.rm=T)) %>% arrange(s) %>% mutate(Behavior=variable) dcast(.,~Behavior)
camdf<-mdf %>% group_by(Unit,variable) %>% summarize(s=sum(value,na.rm=T)) %>% arrange(s) %>% mutate(Behavior=variable) %.% dcast(.,~Behavior)
camdf<-mdf %>% group_by(Unit,variable) %>% summarize(s=sum(value,na.rm=T)) %>% arrange(s) %>% mutate(Behavior=variable) %>% dcast(.,~Behavior)
camdf<-mdf %>% group_by(Unit,variable) %>% summarize(s=sum(value,na.rm=T)) %>% arrange(s) %>% mutate(Behavior=variable) %>% dcast(data=.,~Behavior)
camdf<-mdf %>% group_by(Unit,variable) %>% summarize(s=sum(value,na.rm=T)) %>% arrange(s) %>% mutate(Behavior=variable) %>% dcast(data=.,...~Behavior)
camdf
camdf<-mdf %>% group_by(Unit,variable) %>% summarize(s=sum(value,na.rm=T)) %>% arrange(s) %>% mutate(Behavior=variable) %>% dcast(d...~Behavior)
camdf<-mdf %>% group_by(Unit,variable) %>% summarize(s=sum(value,na.rm=T)) %>% arrange(s) %>% mutate(Behavior=variable) %>% dcast(...~Behavior)
camdf<-mdf %>% group_by(Unit,variable) %>% summarize(s=sum(value,na.rm=T)) %>% arrange(s) %>% mutate(Behavior=variable) %>% dcast(...~Behavior,value.var="value")
camdf<-mdf %>% group_by(Unit,variable) %>% summarize(s=sum(value,na.rm=T)) %>% arrange(s) %>% mutate(Behavior=variable) %>% dcast(...~Behavior,value.var="s")
camdf
camdf<-mdf %>% group_by(Unit,variable) %>% summarize(s=sum(value,na.rm=T)) %>% arrange(s) %>% ungroup() %>% mutate(Behavior=variable) %>% dcast(...~Behavior,value.var="s")
camdf
camdf<-mdf %>% group_by(Unit,variable) %>% summarize(s=sum(value,na.rm=T)) %>% arrange(s) %>% ungroup() %>% mutate(Behavior=variable) %>% select(-variable) %>%  dcast(...~Behavior,value.var="s")
camdf
camdf<-mdf %>% group_by(Unit,variable) %>% summarize(s=sum(value,na.rm=T)) %>% arrange(s) %>% ungroup() %>% mutate(Behavior=variable) %>% select(-variable) %>%  dcast(...~Behavior,value.var="s") %>% arrange(All)
camdf
write.csv(camdf,"Figures/CCAMLR_days.csv")
write.csv(camdf,"Figures/CCAMLR_days.csv")
library(knitr)
opts_chunk$set(echo=F,warning=F,message=F,fig.width = 11,fig.height = 5,cache=F)
library(boot)
library(raster)
library(reshape2)
library(ggplot2)
library(MASS)
library(ggmap)
library(dplyr)
library(chron)
library(gridExtra)
library(stringr)
library(R2jags)
library(move)
library(maps)
library(maptools)
#New model to be run, flag turned off if just updating.
newModel<-T
load("SingleSpecies.RData")
table(mxy$Year)
#read data
mdat<-read.csv("InputData/FilteredData.csv",row.names=1)
#standardize column names to match the simulation
#Create an animal tag.
mxy <- as(mdat, "data.frame")
mxy$Animal<-mxy$individual.local.identifier
mxy$x<-mxy$location.long
mxy$y<-mxy$location.lat
#make sure to remove minke whales, should be already gone, but justfor safety
minke<-c("131117","131118","131120","154184")
mxy<-mxy[!mxy$individual.local.identifier %in% minke,]
#grab set of animals
#mxy<-mxy[mxy$Animal %in% c("112699","121207","131151"),]
#empty coordinates
mxy<-mxy[!is.na(mxy$x),]
#crop by extent
d<-SpatialPointsDataFrame(cbind(mxy$x,mxy$y),data=mxy,proj4string=CRS("+proj=longlat +datum=WGS84"))
d<-crop(d,y=extent(c(-75,-50,-70,-57.5)))
mxy<-as.data.frame(d)
#set datestamp
mxy$timestamp<-as.POSIXct(mxy$timestamp)
#month and year columns
mxy$Month<-months(mxy$timestamp)
mxy$Year<-years(mxy$timestamp)
#Only austral sping and summer
mxy<-mxy[mxy$Month %in% month.name[1:7],]
#remove empty timestamps
mxy<-mxy[!is.na(mxy$timestamp),]
#remove duplicates
mxy<-mxy[!duplicated(data.frame(mxy$timestamp,mxy$Animal)),]
mxy<-mxy[!mxy$ETOPO1.Elevation>0,]
step_length=12
sxy<-split(mxy,mxy$Animal)
timed<-function(d,step_length){
d$j[1]<-0
for (x in 2:nrow(d)){
d$j[x]<-as.numeric(difftime(as.POSIXct(d$timestamp[x]),as.POSIXct(d$timestamp[x-1]),units="mins"))/(step_length*60)
}
#Split out track endings
ends<-c(1,which(d$j>1),nrow(d))
for(w in 2:length(ends)){
d[ends[w-1]:ends[w],"Track"]<-w-1
}
#remove tracks that are shorter than three days
track_time<-d %>% group_by(Track) %>% summarize(mt=difftime(max(as.POSIXct(timestamp)),min(as.POSIXct(timestamp)),units="hours")) %>% filter(mt>=24) %>% .$Track
d<-d[d$Track %in% track_time,]
#renumber the tracks
d$Track<-as.numeric(as.factor(d$Track))
return(d)
}
sxy<-lapply(sxy,timed,step_length=12)
mxy<-rbind_all(sxy)
sxy<-split(mxy,list(mxy$Animal,mxy$Track),drop=TRUE)
sxy<-lapply(sxy,function(x){
#How many observations in each step length segment
x$step<-as.numeric(cut(as.POSIXct(x$timestamp),"12 hours"))
return(x)
})
mxy<-rbind_all(sxy)
sxy<-split(mxy,list(mxy$Animal,mxy$Track),drop=TRUE)
sxy<-lapply(sxy,function(x){
#How many observations in each step length segment
x$step<-as.numeric(cut(as.POSIXct(x$timestamp),"12 hours"))
return(x)
})
mxy<-rbind_all(sxy)
mxy$Animal<-as.numeric(as.factor(mxy$Animal))
table(mxy$Year)
#total number of steps per track/animal
steps_all<-mxy %>% group_by(Animal,Track) %>% summarize(n=length(unique(step)))
# give each step a label
mxy<-mxy %>% group_by(Animal,Track,step) %>% mutate(jStep=1:n())
#Cast time array
j<-acast(mxy,Animal~Track~step~jStep,value.var="j")
#how many observations per individual in each step
mxy$step<-factor(mxy$step,levels=1:max(steps_all$n))
idx<-melt(table(mxy$Animal,mxy$Track,mxy$step))
colnames(idx)<-c("Animal","Track","step","jStep")
idx<-acast(data=idx,Animal~Track~step)
#month array
mxy$MonthF<-as.numeric(factor(mxy$Month,levels=month.name))
MonthA<-acast(mxy,Animal~Track~step,value.var="MonthF",fun.aggregate = min)
MonthA[!is.finite(MonthA)]<-NA
#Individuals
ind=length(unique(mxy$Animal))
#tracks per indivudal
tracks<-mxy %>% group_by(Animal) %>% summarize(tracks=length(unique(Track))) %>% .$tracks
#steps per track
steps<-acast(steps_all,Animal~Track,value.var="n")
#obs array
obs<-melt(mxy,measure.vars=c("x","y"))
obs<-acast(obs,Animal~Track~step~jStep~variable)
#Plot
mxy<-mxy %>% arrange(Animal,Track,step,jStep)
pp<-c(mean(mxy$x),mean(mxy$y))
m <- get_map(location=pp,source="google",zoom=5,scale=2,maptype="satellite",color = "bw")
ggmap(m)+geom_path(data=mxy, aes(x=x, y=y,col=as.factor(Animal),group=paste(Animal,Track)),size=.5) + scale_color_discrete(guide="none") + theme_inset()
ggplot() +  geom_path(data=oxy,col='blue',aes(x=x,y=y)) +  geom_path(data=mxy,col='red',aes(x=x,y=y),size=2,alpha=0.7)  + facet_wrap(~individual.local.identifier,scales="free",ncol=4)
table(oxy$Year)
table(mxy$Year)
ggplot() +  geom_path(data=oxy[oxy$Year %in% "2012",],col='blue',aes(x=x,y=y)) +  geom_path(data=mxy[mxy$Year %in% "2012",],col='red',aes(x=x,y=y),size=2,alpha=0.7)  + facet_wrap(~individual.local.identifier,scales="free",ncol=4)
head(oxy)
hist((2*rbeta(1e5,10,10) -1) * pi)
hist((2*rbeta(1e5,10,10)) * pi)
hist((2*rbeta(1e5,10,10) -1) * pi,col='red',add=T)
hist((2*rbeta(1e5,20,20) -1) * pi,col='red',add=T)
hist((2*rbeta(1e5,10,10)) * pi)
hist((2*rbeta(1e5,20,20) -1) * pi,col='red',add=T)
hist(rbeta(1e5,10,10))
hist(rbeta(1e5,20,20),add=T,col='red')
hist(rbeta(5,2))
hist(rbeta(1e5,5,2))
hist(rbeta(1e5,5,2)*rbeta(1,1))
hist(rbeta(1e5,5,2)*rbeta(1e5,1,1))
hist(rbeta(1e5,10,2)*rbeta(1e5,1,1))
hist(rbeta(1e5,1,2)*rbeta(1e5,1,1))
hist(rbeta(1e5,2,2)*rbeta(1e5,1,1))
hist(rbeta(1e5,1,2)*rbeta(1e5,1,1))
hist(rbeta(1e5,1.5,2)*rbeta(1e5,1,1))
